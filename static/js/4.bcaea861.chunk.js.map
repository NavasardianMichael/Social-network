{"version":3,"sources":["components/Users/Users.module.css","components/Users/Pagination.module.css","components/Users/Pagination.js","components/Users/Users.js","redux/usersSelectors.js","components/Users/UsersContainer.js"],"names":["module","exports","userBlock1","userBlock2","pageNumbersContainer","pageNumbers","activePageNumber","pageNumbersDecadeChangeButton","connect","state","currentPageNumbersDecade","usersPage","SetCurrentPageNumbersDecade","props","allPageNumbersArray","i","Math","ceil","usersCount","pageSize","push","CurrentPageNumbersArray","slice","react_default","a","createElement","className","classes","isFetching","Preloader","onClick","map","elem","key","concat","currentPageNumber","onPageChange","Users","Users_Pagination","users","react_router_dom","to","id","src","photos","large","followed","unfollow","follow","name","getUsers","getPageSize","getUsersCount","getCurrentPageNumber","getIsFetching","UsersContainer","_this","getUsersProfiles","this","_React$createElement","components_Users_Users","setFetchingState","setUsers","setCurrentPageNumber","Object","defineProperty","React","Component"],"mappings":"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","file":"static/js/4.bcaea861.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBlock1\":\"Users_userBlock1__2UnsE\",\"userBlock2\":\"Users_userBlock2__EXBdS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumbersContainer\":\"Pagination_pageNumbersContainer__3lIhi\",\"pageNumbers\":\"Pagination_pageNumbers__kWXAH\",\"activePageNumber\":\"Pagination_activePageNumber__1fUc2\",\"pageNumbersDecadeChangeButton\":\"Pagination_pageNumbersDecadeChangeButton__poH3Y\"};","import React from 'react'\r\nimport classes from './Pagination.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport {connect} from 'react-redux'\r\nimport {SetCurrentPageNumbersDecade} from '../../redux/UsersReducer'\r\n\r\nconst Pagination = (props) => {\r\n        let allPageNumbersArray = [];\r\n\r\n        for (let i = 1; i <= Math.ceil(props.usersCount / props.pageSize); i++) {\r\n            allPageNumbersArray.push(i);\r\n        };\r\n\r\n        let CurrentPageNumbersArray = allPageNumbersArray.slice((props.currentPageNumbersDecade-1)*10,(props.currentPageNumbersDecade-1)*10+10)\r\n\r\n        const setPreviousPageNumbersDecade = () => {\r\n            if (props.currentPageNumbersDecade===1) return;\r\n            props.SetCurrentPageNumbersDecade(props.currentPageNumbersDecade-1)\r\n        }\r\n\r\n        const setNextPageNumbersDecade = () => {\r\n            \r\n            if (props.usersCount / props.pageSize / 10 <= props.currentPageNumbersDecade) return;\r\n            props.SetCurrentPageNumbersDecade(props.currentPageNumbersDecade+1)\r\n        }\r\n\r\n        return (\r\n                <div className={classes.pageNumbersContainer}>\r\n                    {props.isFetching ? <Preloader /> : null}\r\n\r\n                    <span className={classes.pageNumbersDecadeChangeButton} onClick={setPreviousPageNumbersDecade}> {'<'} </span>\r\n                        {CurrentPageNumbersArray.map(elem => {\r\n                        \r\n                        return <span key={elem} className={`${classes.pageNumbers} ${elem===props.currentPageNumber ? classes.activePageNumber : null}`}\r\n                        onClick={() => {props.onPageChange(elem)}}>{elem}</span>\r\n                        })}\r\n                    <span className={classes.pageNumbersDecadeChangeButton} onClick={setNextPageNumbersDecade}> {'>'} </span>\r\n\r\n                </div>\r\n                )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        currentPageNumbersDecade: state.usersPage.currentPageNumbersDecade\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps , {SetCurrentPageNumbersDecade})(Pagination)","import React from 'react'\r\nimport classes from './Users.module.css'\r\nimport Pagination from './Pagination'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Users = (props) => {\r\n\r\n    return (\r\n            <div>\r\n                <Pagination usersCount={props.usersCount} pageSize={props.pageSize} isFetching={props.isFetching} currentPageNumber={props.currentPageNumber}  activePageNumber={props.activePageNumber} onPageChange={props.onPageChange} />\r\n                    \r\n                    {props.users.map((elem) => {\r\n                    return  <div>\r\n                                <div className={classes.userBlock1}>\r\n                                    <NavLink to={'/Profile/' + elem.id}><img src={elem.photos.large} /></NavLink>\r\n                                        { (elem.followed) ? <button onClick= {()=> props.unfollow(elem.id)}>unfollow</button> \r\n                                                            : <button onClick={()=>props.follow(elem.id)}>follow</button> }\r\n                                </div>\r\n                                <div className={classes.userBlock2}>\r\n                                    <span>{elem.name}</span>\r\n                                </div>\r\n                            </div>\r\n                    })}\r\n            </div>\r\n            )\r\n}\r\n\r\nexport default Users","export const getUsers = state => state.usersPage.users;\r\nexport const getPageSize = state => state.usersPage.pageSize;\r\nexport const getUsersCount = state => state.usersPage.usersCount;\r\nexport const getCurrentPageNumber = state => state.usersPage.currentPageNumber;\r\nexport const getIsFetching = state => state.usersPage.isFetching;","import React from 'react';\r\nimport Users from './Users';\r\nimport { connect } from 'react-redux';\r\nimport * as axios from 'axios';\r\nimport { follow , unfollow , getUsersProfiles } from '../../redux/UsersReducer';\r\nimport {usersAPI} from '../../API/API';\r\nimport {getUsers , getPageSize , getUsersCount , getCurrentPageNumber , getIsFetching} from '../../redux/usersSelectors'\r\n\r\nclass UsersContainer extends React.Component {\r\n    \r\n    componentDidMount() {\r\n        this.props.getUsersProfiles(this.props.currentPageNumber , this.props.pageSize)\r\n        };\r\n\r\n    onPageChange = (elem) => {\r\n    this.props.getUsersProfiles(elem , this.props.pageSize);\r\n    }\r\n \r\n    render() {\r\n        return (\r\n            <Users  \r\n                users={this.props.users}\r\n                usersCount={this.props.usersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPageNumber={this.props.currentPageNumber}\r\n                setFetchingState={this.props.setFetchingState}\r\n                isFetching={this.props.isFetching}\r\n                setUsers={this.props.setUsers}\r\n                getUsersCount={this.props.getUsersCount}\r\n                setCurrentPageNumber={this.props.setCurrentPageNumber}\r\n                setFetchingState={this.props.setFetchingState}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                onPageChange={this.onPageChange}\r\n            />\r\n        )\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        usersCount: getUsersCount(state),\r\n        currentPageNumber: getCurrentPageNumber(state),\r\n        isFetching: getIsFetching(state)\r\n    }\r\n};\r\n        \r\nexport default connect(mapStateToProps , {follow , unfollow , getUsersProfiles} )(UsersContainer);\r\n\r\n\r\n"],"sourceRoot":""}