{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Dialogs.js","hoc/AuthRedirect.js","redux/dialogsSelectors.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","dialogs","header","dialogsItems","dialog","activeLink","newMessageArea","message","formIcon","fromIcon","Message","props","react_default","a","createElement","className","classes","DialogItem","path","id","react_router_dom","to","activeClassName","name","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","messages","Field","component","Textarea","placeholder","validate","required","inputMinLength2","inputMaxLength8","Dialogs","dialogsData","map","elem","Dialogs_DialogItem_DialogItem","key","messagesData","Dialogs_Message_Message","formData","addMessage","newMessagetext","mapStateToProps","state","isAuth","auth","getDialogsData","dialogsPage","getMessagesData","DialogsContainer","compose","connect","Component","checkAuthComponent","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","react_router","React"],"mappings":"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","file":"static/js/3.2f19f458.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2K4K4\",\"header\":\"Dialogs_header__2ch0q\",\"dialogsItems\":\"Dialogs_dialogsItems__WzaLv\",\"dialog\":\"Dialogs_dialog__Hfy3u\",\"activeLink\":\"Dialogs_activeLink__3tNKJ\",\"newMessageArea\":\"Dialogs_newMessageArea__2O6ZT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2G5a5\",\"formIcon\":\"Message_formIcon__R7J6u\",\"fromIcon\":\"Message_fromIcon__1lPkZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__2vFMR\",\"activeLink\":\"DialogItem_activeLink__3SmnI\"};","import React from 'react'\r\nimport classes from './Message.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\nreturn (\r\n\t<div>\r\n\t\t<div className={classes.message}>{props.message}</div>\r\n\t\t<div className={classes.fromIcon}></div>\r\n\t</div>\r\n)\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport classes from './DialogItem.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst DialogItem = (props) => {\r\nlet path = '/Dialogs/' + props.id;\r\nreturn (\r\n<div className={classes.dialog}>\r\n    <NavLink to={path} activeClassName={classes.activeLink} >\r\n        {props.name}\r\n    </NavLink>\r\n</div>\r\n)\r\n}\r\nexport default DialogItem","import React from 'react'\r\nimport classes from './Dialogs.module.css'\r\nimport Message from './Message/Message'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {Textarea} from '../../common/formTemplates/formTemplates'\r\nimport {required , inputMinLength2 , inputMaxLength8} from '../../common/Validators/validators'\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={classes.messages}>    \r\n                <div className={classes.newMessageArea}>\r\n                    <Field name='newMessagetext' component={Textarea} placeholder='a' validate={[required , inputMinLength2 , inputMaxLength8]} />\r\n                    <button>Send</button>\r\n                </div>\r\n            </div>    \r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n    form: 'Add message'\r\n})(AddMessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsData = props.dialogsData.map((elem) => {\r\n        return <DialogItem name={elem.name} key={elem.key} id={elem.id} />\r\n    });\r\n    let messagesData = props.messagesData.map((elem) => {\r\n        return <Message message={elem.message} id={elem.id} />\r\n    });\r\n    const onSubmit = (formData) => {\r\n        props.addMessage(formData.newMessagetext)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={classes.header}>\r\n                Dialogs\r\n            </div>\r\n\r\n            <div className={classes.dialogs}>\r\n                <div className={classes.dialogsItems}>\r\n                    {dialogsData}     \r\n                </div>\r\n                <div className={classes.newMessageArea}>\r\n                    {messagesData}\r\n                    <AddMessageReduxForm onSubmit={onSubmit} />\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n\r\n/*import React from 'react'\r\nimport classes from './Dialogs.module.css'\r\nimport Message from './Message/Message'\r\nimport DialogItem from './DialogItem/DialogItem'\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsData = props.dialogsData.map((elem) => {\r\n        return <DialogItem name={elem.name} id={elem.id} />\r\n    });\r\n\r\n    let messagesData = props.messagesData.map((elem) => {\r\n        return <Message message={elem.message} id={elem.id} />\r\n    });\r\n\r\n    let refToTextArea = React.createRef();\r\n    let refToButton=React.createRef();\r\n\r\n    let addNewMessage = () => {\r\n        props.addNewMessage('')\r\n    };\r\n\r\n    let newMessageTextChange = () => {\r\n        props.newMessageTextChange(refToTextArea.current.value);\r\n    };\r\n\r\n    let addNewMessageByEnterKey = (event) => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n            refToButton.current.click();\r\n            return false\r\n        } \r\n    };\r\n\r\n    return (\r\n        <div>\r\n    <div className={classes.header}>\r\n        Dialogs\r\n    </div>\r\n    <div className={classes.dialogs}>\r\n        <div className={classes.dialogsItems}>\r\n            {dialogsData}\r\n        </div>\r\n        <div className={classes.messages}>\r\n            {messagesData}\r\n            <div className={classes.newMessageArea}>\r\n                <textarea ref={refToTextArea} onKeyUp={addNewMessageByEnterKey} value={props.value} onChange={newMessageTextChange}></textarea>\r\n                <button ref={refToButton} onClick={addNewMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n    )\r\n}\r\nexport default Dialogs*/","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth\r\n\t}\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class checkAuthComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />;\r\n            return <Component {...this.props} />\r\n        }\r\n    };\r\n    let connectedCheckAuthComponent = connect(mapStateToProps)(checkAuthComponent);\r\n    return connectedCheckAuthComponent\r\n}\r\n","export const getDialogsData = state => state.dialogsPage.dialogsData;\r\nexport const getMessagesData = state => state.dialogsPage.messagesData;","import Dialogs from './Dialogs'\r\nimport {addMessage} from '../../redux/DialogsReducer'\r\nimport {connect} from 'react-redux'\r\nimport {withAuthRedirect} from '../../hoc/AuthRedirect'\r\nimport {compose} from 'redux'\r\nimport {getDialogsData , getMessagesData} from '../../redux/dialogsSelectors'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n    dialogsData: getDialogsData(state),\r\n    messagesData: getMessagesData(state)\r\n    }\r\n};\r\n\r\nlet DialogsContainer = compose(connect(mapStateToProps, {addMessage}) , withAuthRedirect) (Dialogs)\r\n\r\nexport default DialogsContainer"],"sourceRoot":""}